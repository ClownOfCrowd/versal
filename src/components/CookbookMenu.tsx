'use client';

import { useState, useEffect, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

interface MenuItem {
  id: number;
  name: string;
  description: string;
  ingredients: string[];
  price: string;
  image: string;
  video?: string; // URL –¥–ª—è –≤–∏–¥–µ–æ –∏–ª–∏ GIF
  category: string;
  cookingTime: string;
  calories: string;
}

const menuItems: MenuItem[] = [
  {
    id: 1,
    name: '–°—Ç–µ–π–∫ –†–∏–±–∞–π',
    description: '–°–æ—á–Ω—ã–π —Å—Ç–µ–π–∫ –∏–∑ –º—Ä–∞–º–æ—Ä–Ω–æ–π –≥–æ–≤—è–¥–∏–Ω—ã, –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–æ–º –æ–≥–Ω–µ —Å —Ä–æ–∑–º–∞—Ä–∏–Ω–æ–º –∏ —á–µ—Å–Ω–æ—á–Ω—ã–º –º–∞—Å–ª–æ–º',
    ingredients: [
      '–ú—Ä–∞–º–æ—Ä–Ω–∞—è –≥–æ–≤—è–¥–∏–Ω–∞',
      '–†–æ–∑–º–∞—Ä–∏–Ω',
      '–ß–µ—Å–Ω–æ—á–Ω–æ–µ –º–∞—Å–ª–æ',
      '–ú–æ—Ä—Å–∫–∞—è —Å–æ–ª—å',
      '–°–≤–µ–∂–µ–º–æ–ª–æ—Ç—ã–π –ø–µ—Ä–µ—Ü'
    ],
    price: '3200‚ÇΩ',
    image: '/images/menu/ribeye.jpg',
    video: '/videos/menu/ribeye.mp4',
    category: 'main',
    cookingTime: '25-30 –º–∏–Ω—É—Ç',
    calories: '650 –∫–∫–∞–ª'
  },
  {
    id: 2,
    name: '–¢–∞—Ä—Ç–∞—Ä –∏–∑ —Ç—É–Ω—Ü–∞',
    description: '–ù–µ–∂–Ω—ã–π —Ç–∞—Ä—Ç–∞—Ä –∏–∑ —Å–≤–µ–∂–µ–≥–æ —Ç—É–Ω—Ü–∞ —Å –∞–≤–æ–∫–∞–¥–æ, –∫–∞–ø–µ—Ä—Å–∞–º–∏ –∏ —Ü–∏—Ç—Ä—É—Å–æ–≤–æ–π –∑–∞–ø—Ä–∞–≤–∫–æ–π',
    ingredients: [
      '–°–≤–µ–∂–∏–π —Ç—É–Ω–µ—Ü',
      '–ê–≤–æ–∫–∞–¥–æ',
      '–ö–∞–ø–µ—Ä—Å—ã',
      '–ö—Ä–∞—Å–Ω—ã–π –ª—É–∫',
      '–¶–∏—Ç—Ä—É—Å–æ–≤–∞—è –∑–∞–ø—Ä–∞–≤–∫–∞',
      '–ú–∏–∫—Ä–æ–∑–µ–ª–µ–Ω—å'
    ],
    price: '1800‚ÇΩ',
    image: '/images/menu/tuna-tartar.jpg',
    category: 'appetizers',
    cookingTime: '15-20 –º–∏–Ω—É—Ç',
    calories: '320 –∫–∫–∞–ª'
  },
  {
    id: 3,
    name: '–§—É–∞-–≥—Ä–∞ —Å –∏–Ω–∂–∏—Ä–æ–º',
    description: '–£—Ç–∏–Ω–æ–µ —Ñ—É–∞-–≥—Ä–∞ —Å –∫–∞—Ä–∞–º–µ–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏–Ω–∂–∏—Ä–æ–º –∏ –±—Ä–∏–æ—à—å—é',
    ingredients: [
      '–£—Ç–∏–Ω–æ–µ —Ñ—É–∞-–≥—Ä–∞',
      '–°–≤–µ–∂–∏–π –∏–Ω–∂–∏—Ä',
      '–ë—Ä–∏–æ—à—å',
      '–ü–æ—Ä—Ç–æ',
      '–°–ø–µ—Ü–∏–∏'
    ],
    price: '2400‚ÇΩ',
    image: '/images/menu/foie-gras.jpg',
    category: 'appetizers',
    cookingTime: '20 –º–∏–Ω—É—Ç',
    calories: '450 –∫–∫–∞–ª'
  },
  {
    id: 4,
    name: '–î–æ—Ä–∞–¥–æ –Ω–∞ –≥—Ä–∏–ª–µ',
    description: '–¶–µ–ª–∞—è –¥–æ—Ä–∞–¥–æ, –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–∞—è –Ω–∞ –≥—Ä–∏–ª–µ —Å —Ç—Ä–∞–≤–∞–º–∏ –∏ –ª–∏–º–æ–Ω–æ–º',
    ingredients: [
      '–î–æ—Ä–∞–¥–æ',
      '–¢–∏–º—å—è–Ω',
      '–†–æ–∑–º–∞—Ä–∏–Ω',
      '–õ–∏–º–æ–Ω',
      '–û–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ',
      '–ß–µ—Å–Ω–æ–∫'
    ],
    price: '2800‚ÇΩ',
    image: '/images/menu/dorado.jpg',
    category: 'main',
    cookingTime: '30-35 –º–∏–Ω—É—Ç',
    calories: '440 –∫–∫–∞–ª'
  },
  {
    id: 5,
    name: '–®–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ñ–æ–Ω–¥–∞–Ω',
    description: '–¢–µ–ø–ª—ã–π —à–æ–∫–æ–ª–∞–¥–Ω—ã–π –¥–µ—Å–µ—Ä—Ç —Å –∂–∏–¥–∫–æ–π –Ω–∞—á–∏–Ω–∫–æ–π –∏ –≤–∞–Ω–∏–ª—å–Ω—ã–º –º–æ—Ä–æ–∂–µ–Ω—ã–º',
    ingredients: [
      '–ë–µ–ª—å–≥–∏–π—Å–∫–∏–π —à–æ–∫–æ–ª–∞–¥',
      '–°–ª–∏–≤–æ—á–Ω–æ–µ –º–∞—Å–ª–æ',
      '–Ø–π—Ü–∞',
      '–°–∞—Ö–∞—Ä',
      '–í–∞–Ω–∏–ª—å–Ω–æ–µ –º–æ—Ä–æ–∂–µ–Ω–æ–µ'
    ],
    price: '950‚ÇΩ',
    image: '/images/menu/fondant.jpg',
    category: 'desserts',
    cookingTime: '15 –º–∏–Ω—É—Ç',
    calories: '460 –∫–∫–∞–ª'
  },
  {
    id: 6,
    name: '–†–∏–∑–æ—Ç—Ç–æ —Å –±–µ–ª—ã–º–∏ –≥—Ä–∏–±–∞–º–∏',
    description: '–ö—Ä–µ–º–æ–≤–æ–µ —Ä–∏–∑–æ—Ç—Ç–æ —Å –±–µ–ª—ã–º–∏ –≥—Ä–∏–±–∞–º–∏ –∏ –ø–∞—Ä–º–µ–∑–∞–Ω–æ–º',
    ingredients: [
      '–†–∏—Å –∞—Ä–±–æ—Ä–∏–æ',
      '–ë–µ–ª—ã–µ –≥—Ä–∏–±—ã',
      '–ü–∞—Ä–º–µ–∑–∞–Ω',
      '–ë–µ–ª–æ–µ –≤–∏–Ω–æ',
      '–°–ª–∏–≤–æ—á–Ω–æ–µ –º–∞—Å–ª–æ',
      '–õ—É–∫-—à–∞–ª–æ—Ç'
    ],
    price: '1600‚ÇΩ',
    image: '/images/menu/risotto.jpg',
    category: 'main',
    cookingTime: '25-30 –º–∏–Ω—É—Ç',
    calories: '520 –∫–∫–∞–ª'
  }
];

export default function CookbookMenu() {
  const [currentPage, setCurrentPage] = useState(0);
  const [isFlipping, setIsFlipping] = useState(false);
  const [flipDirection, setFlipDirection] = useState<'next' | 'prev'>('next');
  const [isDragging, setIsDragging] = useState(false);
  const [dragStart, setDragStart] = useState(0);
  const audioRef = useRef<HTMLAudioElement | null>(null);
  const bookRef = useRef<HTMLDivElement>(null);
  const flipTimeoutRef = useRef<NodeJS.Timeout | null>(null);
  const [animationComplete, setAnimationComplete] = useState(true);

  useEffect(() => {
    audioRef.current = new Audio('/sounds/page-flip.mp3');
    audioRef.current.volume = 0.5;

    return () => {
      if (flipTimeoutRef.current) {
        clearTimeout(flipTimeoutRef.current);
      }
    };
  }, []);

  const playFlipSound = () => {
    if (audioRef.current) {
      audioRef.current.currentTime = 0;
      audioRef.current.play();
    }
  };

  const handleDragStart = (e: React.MouseEvent<HTMLDivElement>) => {
    if (isFlipping || !animationComplete) return;
    setIsDragging(true);
    setDragStart(e.clientX);
  };

  const handleDragMove = (e: React.MouseEvent<HTMLDivElement>) => {
    if (!isDragging || isFlipping || !animationComplete) return;
    
    const dragDistance = e.clientX - dragStart;
    const threshold = 150;

    if (Math.abs(dragDistance) > threshold) {
      if (dragDistance > 0 && currentPage > 0) {
        flipPage('prev');
      } else if (dragDistance < 0 && currentPage < menuItems.length - 4) {
        flipPage('next');
      }
      setIsDragging(false);
    }
  };

  const handleDragEnd = () => {
    setIsDragging(false);
  };

  const flipPage = (direction: 'next' | 'prev') => {
    if (isFlipping || !animationComplete) return;
    
    if (flipTimeoutRef.current) {
      clearTimeout(flipTimeoutRef.current);
    }
    
    setAnimationComplete(false);
    setFlipDirection(direction);
    setIsFlipping(true);
    
    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
    requestAnimationFrame(() => {
      playFlipSound();
    });

    const newPage = direction === 'next' ? currentPage + 4 : currentPage - 4;
    
    flipTimeoutRef.current = setTimeout(() => {
      setCurrentPage(newPage);
      requestAnimationFrame(() => {
        setIsFlipping(false);
        setTimeout(() => {
          setAnimationComplete(true);
        }, 30);
      });
    }, 300);
  };

  const pageVariants = {
    initial: (direction: 'next' | 'prev') => ({
      rotateY: direction === 'next' ? 0 : -180,
      transition: {
        duration: 0
      }
    }),
    animate: (direction: 'next' | 'prev') => ({
      rotateY: direction === 'next' ? -180 : 0,
      transition: {
        duration: 0.6,
        ease: [0.645, 0.045, 0.355, 1.000],
        type: "tween"
      }
    }),
    exit: (direction: 'next' | 'prev') => ({
      rotateY: direction === 'next' ? -180 : 0,
      transition: {
        duration: 0.3,
        ease: [0.645, 0.045, 0.355, 1.000]
      }
    })
  };

  const renderDishCard = (dish: MenuItem) => (
    <div className="dish-card">
      <div className="dish-media">
        {dish.video ? (
          <video 
            autoPlay 
            loop 
            muted 
            playsInline
            className="dish-video"
          >
            <source src={dish.video} type="video/mp4" />
            <img 
              src={dish.image} 
              alt={dish.name}
              className="dish-image"
            />
          </video>
        ) : (
          <img 
            src={dish.image} 
            alt={dish.name}
            className="dish-image"
          />
        )}
      </div>
      <div className="dish-content">
        <div className="dish-header">
          <h3 className="dish-title">{dish.name}</h3>
          <div className="dish-price">{dish.price}</div>
        </div>
        <p className="dish-description">{dish.description}</p>
        <div className="dish-meta">
          <span>üïí {dish.cookingTime}</span>
          <span>üìä {dish.calories}</span>
        </div>
        <div className="dish-ingredients">
          <h4>–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:</h4>
          <ul>
            {dish.ingredients.map((ingredient, index) => (
              <li key={index}>{ingredient}</li>
            ))}
          </ul>
        </div>
      </div>
    </div>
  );

  return (
    <div className="book-container">
      <div 
        ref={bookRef}
        className="book"
        onMouseDown={handleDragStart}
        onMouseMove={handleDragMove}
        onMouseUp={handleDragEnd}
        onMouseLeave={handleDragEnd}
      >
        <motion.div 
          className="book-page left-page"
          initial={false}
          animate={{ 
            opacity: 1,
            transition: { duration: 0.15 }
          }}
        >
          <div className="page-content">
            {menuItems[currentPage] && renderDishCard(menuItems[currentPage])}
            {menuItems[currentPage + 1] && renderDishCard(menuItems[currentPage + 1])}
          </div>
        </motion.div>
        
        <motion.div 
          className="book-page right-page"
          initial={false}
          animate={{ 
            opacity: 1,
            transition: { duration: 0.15 }
          }}
        >
          <div className="page-content">
            {menuItems[currentPage + 2] && renderDishCard(menuItems[currentPage + 2])}
            {menuItems[currentPage + 3] && renderDishCard(menuItems[currentPage + 3])}
          </div>
        </motion.div>

        <AnimatePresence mode="wait" onExitComplete={() => setAnimationComplete(true)}>
          {isFlipping && (
            <motion.div
              className={`flipping-page ${flipDirection === 'next' ? 'flip-right' : 'flip-left'} animate`}
              custom={flipDirection}
              variants={pageVariants}
              initial="initial"
              animate="animate"
              exit="exit"
              style={{
                transformStyle: 'preserve-3d',
                backfaceVisibility: 'hidden',
                willChange: 'transform'
              }}
            >
              <motion.div 
                className="page-front"
                style={{ backfaceVisibility: 'hidden' }}
              >
                <div className="page-content">
                  {flipDirection === 'next' ? (
                    <>
                      {menuItems[currentPage + 2] && renderDishCard(menuItems[currentPage + 2])}
                      {menuItems[currentPage + 3] && renderDishCard(menuItems[currentPage + 3])}
                    </>
                  ) : (
                    <>
                      {menuItems[currentPage] && renderDishCard(menuItems[currentPage])}
                      {menuItems[currentPage + 1] && renderDishCard(menuItems[currentPage + 1])}
                    </>
                  )}
                </div>
              </motion.div>
              <motion.div 
                className="page-back"
                style={{ backfaceVisibility: 'hidden' }}
              >
                <div className="page-content">
                  {flipDirection === 'next' ? (
                    <>
                      {menuItems[currentPage + 4] && renderDishCard(menuItems[currentPage + 4])}
                      {menuItems[currentPage + 5] && renderDishCard(menuItems[currentPage + 5])}
                    </>
                  ) : (
                    <>
                      {menuItems[currentPage - 2] && renderDishCard(menuItems[currentPage - 2])}
                      {menuItems[currentPage - 1] && renderDishCard(menuItems[currentPage - 1])}
                    </>
                  )}
                </div>
              </motion.div>
            </motion.div>
          )}
        </AnimatePresence>

        <div className="book-navigation">
          <button 
            onClick={() => flipPage('prev')}
            disabled={currentPage === 0 || isFlipping || !animationComplete}
            className="nav-button prev"
          >
            ‚Üê
          </button>
          <button 
            onClick={() => flipPage('next')}
            disabled={currentPage >= menuItems.length - 4 || isFlipping || !animationComplete}
            className="nav-button next"
          >
            ‚Üí
          </button>
        </div>
      </div>
    </div>
  );
} 